PROMPT CREATING CONSTRAINTS

ALTER TABLE USERS
	ADD CONSTRAINT USER_ID_PK PRIMARY KEY (user_id)
	MODIFY(FIRST_NAME NOT NULL)
	MODIFY(LAST_NAME NOT NULL)
	MODIFY(EMAIL NOT NULL)
	MODIFY(NICK NOT NULL)
	MODIFY(ZIP_CODE NOT NULL)
	MODIFY(PASSWORD_HASH NOT NULL)
	MODIFY(PASSWORD_SALT NOT NULL)
	ADD CONSTRAINT
	USER_ZIPCODE_FK FOREIGN KEY
		(zip_code) REFERENCES ZIP_CODES (zip_code)
	ADD CONSTRAINT USER_NICK_UNQ UNIQUE (NICK)
	ADD CONSTRAINT USER_EMAIL_UNQ UNIQUE (EMAIL);
/

ALTER TABLE PRODUCTS
	ADD CONSTRAINT PRODUCT_ID_PK PRIMARY KEY (product_id)
	ADD CONSTRAINT
	PRODUCT_CREATED_BY_FK FOREIGN KEY
		(created_by) REFERENCES ADMINS (admin_id)
	ADD CONSTRAINT
	PRODUCT_MODIFIED_BY_FK FOREIGN KEY
		(modified_by) REFERENCES ADMINS(admin_id)
	MODIFY(NAME NOT NULL)
	MODIFY(CREATED_BY NOT NULL)
	MODIFY(CREATED_DATE NOT NULL);
/

ALTER TABLE FEATURES
	ADD CONSTRAINT FEATURE_ID_PK PRIMARY KEY (feature_id)
	FEATURE_CREATED_BY_FK FOREIGN KEY
		(created_by) REFERENCES USERS (user_id)
	ADD CONSTRAINT
	FEATURE_MODIFIED_BY_FK FOREIGN KEY
		(modified_by) REFERENCES USERS(user_id)
	ADD CONSTRAINT FEATURE_TYPE_NAME_UNQ UNIQUE (feature_type, feature_name)
	MODIFY(FEATURE_TYPE NOT NULL)
	MODIFY(FEATURE_NAME NOT NULL)
	MODIFY(CREATED_BY NOT NULL)
	MODIFY(CREATED_DATE NOT NULL)
	MODIFY(MODIFIED_DATE NOT NULL)
	MODIFY(MODIFIED_BY NOT NULL);
/

ALTER TABLE PRODUCT_FEATURES
	ADD CONSTRAINT PRODUCT_FEATURE_ID_PK PRIMARY KEY (prod_feat_id)
	ADD CONSTRAINT
	PROD_FEAT_PRODUCT_FK FOREIGN KEY
		(product_id) REFERENCES PRODUCTS (product_id)
		ON DELETE CASCADE
	ADD CONSTRAINT
	PROD_FEAT_FEATURE_FK FOREIGN KEY
		(feature_id) REFERENCES FEATURES (feature_id)
		ON DELETE CASCADE
	ADD CONSTRAINT
	PROD_FEAT_UNIQ UNIQUE (product_id, feature_id)
	MODIFY (PRODUCT_ID NOT NULL)
	MODIFY(FEATURE_ID NOT NULL);
/

ALTER TABLE STORE_PRODUCTS
	ADD CONSTRAINT STORE_PRODUCTS_ID_PK PRIMARY KEY (store_product_id)
	ADD CONSTRAINT 
	STORE_PROD_STORE_FK FOREIGN KEY
		(store_id) REFERENCES STORES (store_id)
		ON DELETE CASCADE
	ADD CONSTRAINT
	STORE_PROD_PRODUCT_FK FOREIGN KEY
		(product_id) REFERENCES PRODUCTS (product_id)
		ON DELETE CASCADE
	ADD CONSTRAINT STORE_PROD_PRICE_CHK CHECK
		(price >= 0)
	MODIFY(STORE_ID NOT NULL)
	MODIFY(PRODUCT_ID NOT NULL);
/

ALTER TABLE STORES
	ADD CONSTRAINT STORE_ID_PK PRIMARY KEY (store_id)
	ADD CONSTRAINT
	STORE_ZIPCODE_FK FOREIGN KEY
		(zip_code) REFERENCES ZIP_CODES (zip_code)
	ADD CONSTRAINT STORE_CREATED_BY_FK FOREIGN KEY 
		(created_by) REFERENCES ADMINS (admin_id)		
	MODIFY(NAME NOT NULL)
	MODIFY(CREATED_BY NOT NULL)
	MODIFY(WEBSITE NOT NULL)
	MODIFY(ZIP_CODE NOT NULL)
	MODIFY(CREATED_DATE NOT NULL)
	MODIFY(MODIFIED_DATE NOT NULL)
	--MODIFY(MODIFIED_BY NOT NULL);
/

ALTER TABLE ZIP_CODES
	ADD CONSTRAINT ZIP_CODE_ID_PK PRIMARY KEY (zip_code)
	MODIFY(CITY NOT NULL)
	MODIFY(COUNTRY NOT NULL);

ALTER TABLE REVIEWS
	ADD CONSTRAINT REVIEWS_ID_PK PRIMARY KEY(review_id)
	ADD CONSTRAINT
	REVIEW_PRODUCT_FK FOREIGN KEY
		(product_id) REFERENCES PRODUCTS (product_id)
	ADD CONSTRAINT
	REVIEW_USER_FK FOREIGN KEY
		(user_id) REFERENCES USERS (user_id)
	MODIFY(PRODUCT_ID NOT NULL)
	MODIFY(USER_ID NOT NULL)
	MODIFY(RATING NOT NULL)
	MODIFY(CREATED_DATE NOT NULL)
	ADD CONSTRAINT review_rating_check CHECK (rating between 0 and 10);
/

ALTER TABLE OFFERS
ADD CONSTRAINT OFFERS_ID_PK PRIMARY KEY(offer_id)
	ADD CONSTRAINT
	OFFER_STORE_FK FOREIGN KEY
		(store_id) REFERENCES STORES (store_id)
	ADD CONSTRAINT
	OFFER_AUCTION_FK FOREIGN KEY
		(auction_id) REFERENCES AUCTIONS (auction_id)
		ON DELETE CASCADE
	MODIFY(STORE_ID NOT NULL)
	MODIFY(AUCTION_ID NOT NULL)
	MODIFY(OFFER_ID NOT NULL)
	MODIFY(OFFER_DATE NOT NULL);
/

ALTER TABLE AUCTIONS
	ADD CONSTRAINT AUCTION_ID_PK PRIMARY KEY(auction_id)
	ADD CONSTRAINT
	AUCTION_USER_FK FOREIGN KEY
		(user_id) REFERENCES USERS (user_id)
	ADD CONSTRAINT
	AUCTION_PRODUCT_FK FOREIGN KEY
		(product_id) REFERENCES PRODUCTS (product_id)
	MODIFY(USER_ID NOT NULL)
	MODIFY(PRODUCT_ID NOT NULL)
	MODIFY(START_DATE NOT NULL)
	MODIFY(AUCTION_STATUS NOT NULL)
	MODIFY(END_DATE NOT NULL);
/

ALTER TABLE USER_WATCHED_PRODUCTS
	ADD CONSTRAINT USER_WATCHED_ID_PK PRIMARY KEY(watched_id)
	ADD CONSTRAINT 
	USER_WATCHED_PRODUCT_ID_FK FOREIGN KEY
		(product_id) REFERENCES PRODUCTS(product_id)
	ADD CONSTRAINT 
	USER_WATCHED_USER_ID_FK FOREIGN KEY
		(user_id) REFERENCES USERS (user_id)
		ON DELETE CASCADE;
	MODIFY(USER_ID NOT NULL)
	MODIFY(PRODUCT_ID NOT NULL)
	MODIFY(USER_WATCH_PROD_DATE NOT NULL)
	ADD CONSTRAINT USER_WATCHED_PROD_SPROD_UNQ UNIQUE (user_id, product_id, store_product_id);
/

ALTER TABLE BLACK_LISTS
	ADD CONSTRAINT BLACK_LISTS_ID_PK PRIMARY KEY (black_list_id)
	ADD CONSTRAINT 
	BLACK_LIST_USER_ID_FK FOREIGN KEY
		(user_id) REFERENCES USERS(user_id)
		ON DELETE CASCADE
	ADD CONSTRAINT BLACK_LIST_USER_ID_UNQ UNIQUE (USER_ID)
	MODIFY(USER_ID NOT NULL)
	MODIFY(CREATED_DATE NOT NULL);
/

ALTER TABLE BLACK_LIST_STOREs
	ADD CONSTRAINT BLACK_LISTS_STORE_ID_PK PRIMARY KEY(black_list_store_id)
	ADD CONSTRAINT
	BL_STORE_STORE_ID_FK FOREIGN KEY
		(store_id)  REFERENCES STORES (store_id)
		ON DELETE CASCADE
	ADD CONSTRAINT
	BL_STORE_BLIST_ID_FK FOREIGN KEY
		(black_list_id) REFERENCES BLACK_LISTS(black_list_id)
		ON DELETE CASCADE
	add constraint
	bl_store_blist_unq unique (black_list_id, store_id)
	MODIFY(STORE_ID NOT NULL)
	MODIFY(BLACK_LIST_ID NOT NULL);
/

ALTER TABLE WORKER_TASKS
	ADD CONSTRAINT WORKER_TASKS_ID_PK PRIMARY KEY(worker_task_id)
	MODIFY(EVENT_TYPE NOT NULL)
	MODIFY(EVENT_DESC NOT NULL)
	MODIFY(EVENT_TIMESTAMP NOT NULL);
/

ALTER TABLE PRICE_LIST
	ADD CONSTRAINT PRICE_LIST_ID_PK PRIMARY KEY(price_list_id)
	ADD CONSTRAINT price_list_sproduct_FK FOREIGN KEY
		(store_product_id) REFERENCES STORE_PRODUCTS(store_product_id)
		ON DELETE CASCADE
	MODIFY(DATETIME NOT NULL)
	MODIFY(PRICE_NEW NOT NULL)
	MODIFY(STORE_PRODUCT_ID NOT NULL);
/

ALTER TABLE SU_CONVERSATION
	ADD CONSTRAINT SU_CONVERSATION_ID_PK PRIMARY KEY(su_conversation_id)
	ADD CONSTRAINT 
	SU_CONV_STORE_ID_FK FOREIGN KEY
		(store_id) REFERENCES STORES (store_id)
	ADD CONSTRAINT
	SU_CONV_USER_ID_FK FOREIGN KEY
		(user_id) REFERENCES USERS (user_id)
	MODIFY(STORE_ID NOT NULL)
	MODIFY(USER_ID NOT NULL)
	MODIFY(START_DATE NOT NULL);
/

ALTER TABLE UU_CONVERSATIONS
	ADD CONSTRAINT UU_CONVERSATION_ID_PK PRIMARY KEY(uu_conversation_id)
	ADD CONSTRAINT 
	UU_CONV_USER1_ID_FK FOREIGN KEY
		(user1_id) REFERENCES USERS (user_id)
	ADD CONSTRAINT
	UU_CONV_USER2_ID_FK FOREIGN KEY
		(user2_id) REFERENCES USERS (user_id)
	MODIFY(USER1_ID NOT NULL)
	MODIFY(USER2_ID NOT NULL)
	MODIFY(START_DATE NOT NULL);
/

ALTER TABLE STORE_MESSAGES
	ADD CONSTRAINT SMESSAGE_ID_PK PRIMARY KEY(smessage_id)
	ADD CONSTRAINT 
	smessage_product_id_FK FOREIGN KEY
		(product_id) REFERENCES PRODUCTS(product_id)
	ADD CONSTRAINT
	SU_CONV_ID_FK FOREIGN KEY
		(su_conversation_id) REFERENCES SU_CONVERSATION(su_conversation_id)
	MODIFY(SENDER NOT NULL)
	MODIFY(SENT_DATE NOT NULL)
	MODIFY(SU_CONVERSATION_ID NOT NULL);
/

ALTER TABLE USER_MESSAGES
ADD CONSTRAINT UMESSAGE_ID_PK PRIMARY KEY(umessage_id)
	ADD CONSTRAINT 
	from_user_id_FK FOREIGN KEY
		(from_user_id) REFERENCES USERS(user_id)
	ADD CONSTRAINT
	TO_USER_ID_FK FOREIGN KEY
		(to_user_id) REFERENCES USERS(user_id)
	ADD CONSTRAINT
	UU_CONV_ID_FK FOREIGN KEY
		(uu_conversation_id) REFERENCES UU_CONVERSATION(uu_conversation_id)
	MODIFY(TO_USER_ID NOT NULL)
	MODIFY(FROM_USER_ID NOT NULL)
	MODIFY(MESSAGE NOT NULL)
	MODIFY(SENT_DATE NOT NULL)
	MODIFY(UU_CONVERSATION_ID NOT NULL);
/


ALTER TABLE PRODUCT_PHOTOS
	ADD CONSTRAINT PRODUCT_PHOTOS_ID_PK PRIMARY KEY (product_photo_id)
	ADD CONSTRAINT 
	product_photo_prod_id_FK FOREIGN KEY
		(product_id) REFERENCES PRODUCTS(product_id)
		ON DELETE CASCADE
	ADD CONSTRAINT
	product_photo_photo_id_FK FOREIGN KEY
		(photo_id) REFERENCES PHOTOS(photo_id)
		ON DELETE CASCADE
	MODIFY(PRODUCT_ID NOT NULL)
	MODIFY(PHOTO_ID NOT NULL);
/

ALTER TABLE PHOTOS
	ADD CONSTRAINT PHOTOS_ID_PK PRIMARY KEY (photo_id)
	--MODIFY(photo_type NOT NULL)
	MODIFY(photo_path NOT NULL);
/

ALTER TABLE STORE_PRODUCT_PHOTOS
	ADD CONSTRAINT STORE_PRODUCT_PHOTOS_ID_PK PRIMARY KEY (store_prod_photo_id)
	ADD CONSTRAINT 
	storeprod_photo_store_id_FK FOREIGN KEY
		(store_id) REFERENCES STORES(store_id)
		ON DELETE CASCADE
	ADD CONSTRAINT
	storeprod_photo_photo_id_FK FOREIGN KEY
		(photo_id) REFERENCES PHOTOS(photo_id)
		ON DELETE CASCADE
	MODIFY(store_id NOT NULL)
	MODIFY(PHOTO_ID NOT NULL);
/

ALTER TABLE TICKET_STATUS
	ADD CONSTRAINT TICKET_STATUS_ID_PK PRIMARY KEY (ticket_status_id)
	MODIFY(TICKET_STATUS_NAME NOT NULL);
/

ALTER TABLE STORE_REPLIES
	ADD CONSTRAINT STORE_REPLY_ID_PK PRIMARY KEY (store_reply_id)
	ADD CONSTRAINT 
	store_reply_admin_id_FK FOREIGN KEY
		(admin_id) REFERENCES ADMINS(admin_id)
	ADD CONSTRAINT 
	store_reply_store_id_FK FOREIGN KEY
		(store_id) REFERENCES STORES(store_id)
	MODIFY(REPLY_DATE NOT NULL)
	--MODIFY(REPLY_admin_ID NOT NULL);
/

ALTER TABLE STORE_TICKET_REPLIES
	ADD CONSTRAINT STORE_TICKET_REPLY_ID_PK PRIMARY KEY (store_ticket_reply_id)
	ADD CONSTRAINT 
	store_ticket_id_FK FOREIGN KEY
		(store_ticket_id) REFERENCES STORE_TICKETS(store_ticket_id)
	ADD CONSTRAINT
	store_ticket_reply_id_FK FOREIGN KEY
		(store_reply_id) REFERENCES STORE_REPLIES(store_reply_id)
	MODIFY(STORE_TICKET_ID NOT NULL)
	MODIFY(STORE_REPLY_ID NOT NULL);
/

ALTER TABLE STORE_TICKETS
ADD CONSTRAINT STORE_TICKETS_ID_PK PRIMARY KEY (store_ticket_id)
	ADD CONSTRAINT 
	store_ticketcategory_id_FK FOREIGN KEY
		(category_id) REFERENCES TICKET_CATEGORIES(ticket_category_id)
	ADD CONSTRAINT
	store_ticket_status_FK FOREIGN KEY
		(status) REFERENCES ticket_status(ticket_status_id)
	MODIFY(TICKET_CATEGORY_ID NOT NULL)
	MODIFY(TICKET_CONTENT NOT NULL)
	MODIFY(TICKET_STATUS NOT NULL)
	MODIFY(TICKET_DATE NOT NULL);
/

ALTER TABLE USER_REPLIES
	ADD CONSTRAINT USER_REPLY_ID_PK PRIMARY KEY (user_reply_id)
	ADD CONSTRAINT 
	user_reply_admin_id_FK FOREIGN KEY
		(admin_id) REFERENCES ADMINS(admin_id)
	ADD CONSTRAINT user_reply_user_id_fk foreign key
		(user_id) references admins(admin_id)
	MODIFY(REPLY_DATE NOT NULL)
	MODIFY(REPLY_USER_ID NOT NULL);
/

ALTER TABLE USER_TICKET_REPLIES
	ADD CONSTRAINT USER_TICKET_REPLY_ID_PK PRIMARY KEY (user_ticket_reply_id)
	ADD CONSTRAINT 
	user_ticket_id_FK FOREIGN KEY
		(user_ticket_id) REFERENCES USER_TICKETS(user_ticket_id)
	ADD CONSTRAINT
	user_ticket_reply_id_FK FOREIGN KEY
		(user_reply_id) REFERENCES USER_REPLIES(user_reply_id)
	MODIFY(USER_TICKET_ID NOT NULL)
	MODIFY(USER_REPLY_ID NOT NULL);
/

ALTER TABLE USER_TICKETS
	ADD CONSTRAINT USER_TICKET_ID_PK PRIMARY KEY (user_ticket_id)
	ADD CONSTRAINT 
	user_ticket_category_id_FK FOREIGN KEY
		(ategory_id) REFERENCES TICKET_CATEGORIES(ticket_category_id)
	ADD CONSTRAINT
	user_ticket_status_FK FOREIGN KEY
		(status) REFERENCES TICKET_STATUS(ticket_status_id)
	MODIFY(CATEGORY_ID NOT NULL)
	MODIFY(CONTENT NOT NULL)
	MODIFY(STATUS NOT NULL)
	MODIFY(TICKET_DATE NOT NULL);
/

ALTER TABLE TICKET_CATEGORIES
	ADD CONSTRAINT TICKET_CATEGORY_ID_PK PRIMARY KEY (ticket_category_id)
	MODIFY(TICKET_CATEGORY NOT NULL);
/

ALTER TABLE ADMINS
	ADD CONSTRAINT ADMIN_ID_PK PRIMARY KEY (admin_id)
	MODIFY(NICK NOT NULL)
	MODIFY(FIRST_NAME NOT NULL)
	MODIFY(LAST_NAME NOT NULL)
	MODIFY(EMAIL NOT NULL)
	MODIFY(PASSWORD_HASH NOT NULL)
	MODIFY(PASSWORD_SALT NOT NULL)
	ADD CONSTRAINT ADMIN_NICK_UNQ UNIQUE (nick)
	ADD CONSTRAINT ADMIN_email_UNQ UNIQUE (email);
/

ALTER TABLE STORE_USERS
	ADD CONSTRAINT store_user_id_pk PRIMARY KEY (store_user_id)
	MODIFY(NICK NOT NULL)
	MODIFY(FIRST_NAME NOT NULL)
	MODIFY(LAST_NAME NOT NULL)
	MODIFY(EMAIL NOT NULL)
	MODIFY(PASSWORD_HASH NOT NULL)
	MODIFY(PASSWORD_SALT NOT NULL)
	MODIFY(STORE_ID NOT NULL)
	ADD CONSTRAINT store_user_store_FK FOREIGN KEY 
		(store_user_store_id) REFERENCES stores (store_id)
	ADD CONSTRAINT STORE_USER_EMAIL_UNQ UNIQUE (EMAIL)
	ADD CONSTRAINT STORE_USER_NICK_UNQ UNIQUE (NICK);
/
ALTER TABLE ADMIN_ALERTS
	ADD CONSTRAINT ADMIN_ALERT_ID_PK PRIMARY KEY (admin_alert_id)
	MODIFY(message NOT NULL)
	MODIFY(ALERT_TIME NOT NULL);
/

ALTER TABLE MESSAGES
	ADD CONSTRAINT MESSAGE_SENDER_FK FOREIGN KEY (from_user) REFERENCES USERS (user_id)
	ADD CONSTRAINT MESSAGE_ID_PK PRIMARY KEY (message_id);
/

*/

ALTER TABLE REPLIES
	ADD CONSTRAINT reply_id_pk primary KEY (reply_id)
	ADD CONSTRAINT is_creator_check CHECK (is_creator in (1,0));
/

ALTER TABLE TICKET_U_A
	ADD CONSTRAINT ticket_ua_user_fk FOREIGN KEY (user_id) references users (user_id)
	ADD CONSTRAINT ticket_ua_admin_fk FOREIGN KEY (admin_id) references admins (admin_id)
	ADD CONSTRAINT ticket_ua_id_pk primary KEY (ticket_ua_id);
/

ALTER TABLE TICKET_U_S
	ADD CONSTRAINT ticket_us_user_fk FOREIGN KEY (user_id) references users (user_id)
	ADD CONSTRAINT ticket_us_store_fk FOREIGN KEY (store_id) references stores (store_id)
	ADD CONSTRAINT ticket_us_id_pk primary KEY (ticket_us_id);
/

ALTER TABLE TICKET_S_A
	ADD CONSTRAINT ticket_sa_admin_fk FOREIGN KEY (admin_id) references admins (admin_id)
	ADD CONSTRAINT ticket_sa_store_fk FOREIGN KEY (store_id) references stores (store_id)
	ADD CONSTRAINT ticket_sa_id_pk primary KEY (ticket_sa_id);
/


ALTER TABLE TICKET_S_A_REPLY
	ADD CONSTRAINT ticket_sa_id_fk FOREIGN KEY (ticket_sa_id) references ticket_s_a (ticket_sa_id)
	ADD CONSTRAINT ticket_sa_reply_fk FOREIGN KEY (reply_id) references replies (reply_id)
	ADD CONSTRAINT ticket_sa_reply_pk primary KEY (ticket_sa_id, reply_id);
/

ALTER TABLE TICKET_U_S_REPLY
	ADD CONSTRAINT ticket_us_id_fk FOREIGN KEY (ticket_us_id) references ticket_u_s (ticket_us_id)
	ADD CONSTRAINT ticket_us_reply_fk FOREIGN KEY (reply_id) references replies (reply_id)
	ADD CONSTRAINT ticket_us_reply_pk primary KEY (ticket_us_id, reply_id);
/

ALTER TABLE TICKET_U_A_REPLY
	ADD CONSTRAINT ticket_ua_id_fk FOREIGN KEY (ticket_ua_id) references ticket_u_a (ticket_ua_id)
	ADD CONSTRAINT ticket_ua_reply_fk FOREIGN KEY (reply_id) references replies (reply_id)
	ADD CONSTRAINT ticket_ua_reply_pk primary KEY (ticket_ua_id, reply_id);
/

/* Created by Julia Osiak, PJWSTK 2014, Bachelor of Science Thesis */